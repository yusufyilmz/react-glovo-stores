{"version":3,"sources":["constants/mediaQueries.js","components/Category/style.js","constants/actionTypes.js","constants/globalStyles.js","components/Header/style.js","components/Header/header.js","components/Header/pageHeader.js","Helpers/textHelper.js","components/Category/categoryCard.js","components/Spinner/style.js","components/Spinner/index.js","components/Error/style.js","components/Error/index.js","components/Category/categoryList.js","components/Category/index.js","components/Store/style.js","Helpers/colorHelper.js","components/Store/storeLabel.js","components/Store/storeCard.js","components/Filter/style.js","constants/urls.js","components/Filter/index.js","components/Store/storeList.js","components/Button/style.js","components/Button/index.js","components/Store/storeHeader.js","components/Store/index.js","components/App/main.js","components/App/index.js","reducers/category-reducer.js","reducers/store-reducer.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["size","device","mobileS","concat","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","CategoryLinkWrapper","styled","Link","_templateObject","displayName","CategoryColWrapper","Col","_templateObject2","CategoryCardWrapper","Card","_templateObject3","props","closed","secondColor","primaryColor","CategoryPageWrapper","div","_templateObject4","CategoryCardListWrapper","_templateObject5","CategoryCardTitleWrapper","Title","_templateObject6","CategoryCardImageWrapper","Img","_templateObject7","CategoryCardImagePlaceholder","_templateObject8","__webpack_require__","d","__webpack_exports__","FETCH_CATEGORIES_SUCCESS","FETCH_CATEGORIES_ERROR","FETCH_STORE_SUCCESS","FETCH_STORE_ERROR","FILTER_STORE_SUCCESS","FILTER_STORE_ERROR","GlobalStyles","createGlobalStyle","HeaderWrapper","HeaderTitleWrapper","Header","_ref","title","react_default","a","createElement","PageHeader","s","description","keywords","header","Helmet","name","content","align","charAt","toUpperCase","slice","CardImage","React","lazy","e","then","bind","categoryCard","style","to","item","react","fallback","Body","label","SpinnerWrapper","Spinner","style_templateObject","components_Spinner","animation","role","ErrorWrapper","Error_style_templateObject","ErrorSubTitleWrapper","style_templateObject2","ErrorTitleWrapper","Error","message","CategoryContainer","Promise","all","categoryList","Container","Row","error","Error_Error","categories","map","Category","key","id","md","components_Category","pageHeader_PageHeader","StoreCardWrapper","Store_style_templateObject","open","Store_style_templateObject2","StoreCardMessageWrapper","Text","style_templateObject3","StorePageWrapper","StoreLabelWrapper","span","color","StoreCardTitleWrapper","StoreCardSubTitleWrapper","StoreHeaderWrapper","StoreDetailWrapper","_templateObject9","StoreLabelListWrapper","_templateObject10","random","Math","floor","StoreLabel","StoreCard","this","tags","tag","storeLabel_StoreLabel","PureComponent","FilterInputWrapper","input","Filter_style_templateObject","FilterWrapper","Filter_style_templateObject2","FilterInputSpanWrapper","Filter_style_templateObject3","Filter","onChange","placeholder","type","src","alt","target","value","StoreContainer","StoreList","Filter_Filter","filterHandleChange","stores","store","lg","storeCard","ButtonWrapper","button","Button_style_templateObject","width","Button","Object","assign","StoreHeader","react_router_dom","Button_Button","Store","match","params","storeHeader_StoreHeader","storeList_StoreList","Main","react_router","exact","path","component","CategoryPage","StorePage","initialState","items","rootReducer","combineReducers","category","state","arguments","length","undefined","action","actionTypes","objectSpread","payload","middleware","ReduxThunkMiddleware","ReduxPromiseMiddleware","logger","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","createStore","reducer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","es","globalStyles","header_Header","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d811a7d.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`\n};\n","import styled from 'styled-components';\nimport { Card, Col } from 'react-bootstrap'\nimport { device } from '../../constants/mediaQueries';\nimport { Link } from 'react-router-dom';\nimport { primaryColor, secondColor } from '../../constants/globalStyles';\n\nexport const CategoryLinkWrapper = styled(Link)`\n   &:hover {\n    color:white;\n    text-decoration:none;\n    cursor:pointer;\n   }\n`\nCategoryLinkWrapper.displayName = 'CategoryLinkWrapper';\n\nexport const CategoryColWrapper = styled(Col)`\n    max-width: 100%!important;\n    padding-right: 0px!important;\n    padding-left: 0px!important;\n`\n\nCategoryColWrapper.displayName = 'CategoryColWrapper';\n\n\nexport const CategoryCardWrapper = styled(Card)`\n    border: 1px solid  ${props => props.closed ? secondColor : primaryColor};\n    border-radius: 10px;\n    box-shadow: 0 2px 20px 0 rgba(0,0,0,.1);\n    text-decoration: none;\n    overflow: hidden;\n    margin-bottom: 40px;\n    transition: .3s;\n    min-width: 260px;\n    text-align: center;\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    margin: 10px;\n    max-width: 100%;\n    position: relative;\n    width: 300px;\n    height: 180px;\n    &:hover {\n        box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);\n        transform: scale(1.06, 1.06) \n    }\n    @media ${device.mobileS} { \n        width: 240px;\n    }\n    @media ${device.mobileM} { \n        width: 300px;\n        height: 225px;\n    }\n`;\n\nCategoryCardWrapper.displayName = 'CategoryCardWrapper';\n\n\nexport const CategoryPageWrapper = styled.div`\n    margin-top: 50px;\n`\n\nCategoryPageWrapper.displayName = 'CategoryPageWrapper';\n\n\nexport const CategoryCardListWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin-top: 8px;\n`;\n\nCategoryCardListWrapper.displayName = 'CategoryCardListWrapper';\n\n\nexport const CategoryCardTitleWrapper = styled(Card.Title)`\n    font-size: 22px;\n    color: #000;\n    line-height: 24px!important;\n    margin-bottom: 10px;\n    font-weight: 400;\n`;\n\nCategoryCardTitleWrapper.displayName = 'CategoryCardTitleWrapper';\n\n\nexport const CategoryCardImageWrapper = styled(Card.Img)`\n    height: 170px;\n    position: relative;\n    object-fit: cover;\n`;\n\nCategoryCardImageWrapper.displayName = 'CategoryCardImageWrapper';\n\n\nexport const CategoryCardImagePlaceholder = styled(Card.Img)`\n    width: 100%;\n    height: 170px;\n    position: relative;\n    object-fit: cover;\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-color: lightgray;\n`;\n\n\nCategoryCardImagePlaceholder.displayName = 'CategoryCardImagePlaceholder';\n","export const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\nexport const LOADING_CATEGORIES_SUCCESS = 'LOADING_CATEGORIES_SUCCESS';\nexport const FETCH_CATEGORIES_ERROR = 'FETCH_CATEGORIES_ERROR';\n\nexport const FETCH_STORE_SUCCESS = 'FETCH_STORE_SUCCESS';\nexport const LOADING_STORE_SUCCESS = 'LOADING_STORE_SUCCESS';\nexport const FETCH_STORE_ERROR = 'FETCH_STORE_ERROR';\n\nexport const FILTER_STORE_SUCCESS = 'FILTER_STORE_SUCCESS';\nexport const FILTER_STORE_ERROR = 'FILTER_STORE_ERROR';\n\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    font-family: Gotham,Arial,Helvetica Neue,Helvetica,sans-serif;\n    font-weight: 300;\n    font-size: 14px;\n    color: #4a4a4a;\n    -webkit-font-smoothing: antialiased;\n    -webkit-overflow-scrolling: touch;\n    -webkit-tap-highlight-color: transparent;\n    overflow-x: hidden;\n  }\n`;\n\nexport const primaryColor = '#2abb9b'\n\nexport const secondColor = '#D3D3D3'\n","import styled from 'styled-components';\nimport { primaryColor } from '../../constants/globalStyles';\n\nexport const HeaderWrapper = styled.div`\n    align-items: center;\n    background: ${primaryColor};\n    box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 2px 9px 1px rgba(0, 0, 0, 0.12), 0 4px 2px -2px rgba(0, 0, 0, 0.2);\n    color: #ffffff;\n    display: flex;\n    font-size: 20px;\n    font-weight: 500;\n    height: 40px;\n    left: 0;\n    padding-left: 16px;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 1;\n`\n\nexport const HeaderTitleWrapper = styled.div`\n    flex: 1;\n    margin-right: 16px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`\n","import React from 'react';\nimport { HeaderTitleWrapper, HeaderWrapper } from \"./style\";\n\n\nexport const Header = ({title}) => (\n    <HeaderWrapper>\n        <HeaderTitleWrapper>\n            {title}\n        </HeaderTitleWrapper>\n    </HeaderWrapper>\n)","\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {capitalize} from '../../Helpers/textHelper';\n\nexport const PageHeader = ({ title, description, keywords, header }) => (\n    <div>\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <meta name=\"keywords\" content={keywords} />\n        </Helmet>\n        {header && <h1 align=\"left\">{capitalize(header)}</h1>}\n    </div>\n);\n\n\n\n\n  ","\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}","import React, { Suspense } from 'react';\nimport { Card, } from 'react-bootstrap';\nimport { CategoryCardWrapper, CategoryCardTitleWrapper, CategoryCardImagePlaceholder, CategoryLinkWrapper } from './style';\n\nconst CardImage = React.lazy(() => import('./categoryImage'))\n\nexport default (props) => (\n    <CategoryLinkWrapper to={`/category/${props.item.name}`}>\n        <CategoryCardWrapper closed={props.item.closed}>\n            <Suspense fallback={<CategoryCardImagePlaceholder />}>\n                <CardImage {...props} />\n            </Suspense>\n            <Card.Body>\n                <CategoryCardTitleWrapper>\n                    <b>{props.item.label}</b>\n                </CategoryCardTitleWrapper>\n            </Card.Body>\n        </CategoryCardWrapper>\n    </CategoryLinkWrapper>\n)\n","import styled from 'styled-components';\nimport {Spinner} from 'react-bootstrap';\n\nexport const SpinnerWrapper = styled(Spinner)`\n    position: fixed;\n    top: 40%;\n    left: 50%;\n    width: 3rem;\n    height: 3rem;\n`","import React from 'react';\nimport { SpinnerWrapper } from './style';\n\nexport default () => (\n  <SpinnerWrapper\n    animation=\"border\" role=\"status\">\n  </SpinnerWrapper>\n)","import styled from 'styled-components';\n\nexport const ErrorWrapper = styled.div`\n    max-width: 600px;\n    font-size: 16px;\n    width: 100%;\n    ax-width: 820px;\n    width: 100%;\n    padding: 0 10px;\n    margin: 22vh auto;\n    color: #4a4a4a;\n    justify-content: space-between;\n`\n\nexport const ErrorSubTitleWrapper = styled.div`\n    font-size: 28px;\n    margin: 15px 0 40px;\n    line-height: 36px;\n    font-weight: 400;\n    color: #9b9b9b;\n`\n\nexport const ErrorTitleWrapper = styled.div`\n    color: #000;\n    font-weight: 600;\n    font-size: 60px;\n    line-height: 100%;\n`\n\n\n","import React from 'react';\nimport { ErrorWrapper, ErrorTitleWrapper, ErrorSubTitleWrapper } from './style';\n\nexport const Error = ({ message }) => (\n    <ErrorWrapper>\n        <ErrorTitleWrapper>\n            Ooops !\n        </ErrorTitleWrapper>\n        <ErrorSubTitleWrapper>\n            {message}\n        </ErrorSubTitleWrapper>\n    </ErrorWrapper>\n)\n\n","import React, { Fragment, Suspense } from 'react';\nimport CategoryCard from './categoryCard';\nimport Spinner from '../Spinner';\nimport { Container, Row } from 'react-bootstrap';\nimport { CategoryCardListWrapper, CategoryColWrapper } from './style';\nimport { Error } from '../Error';\n\nconst CategoryContainer = React.lazy(() => import('../../containers/categoryContainer'))\n\n\nexport default () => (\n  <Container>\n    <Row>\n      <Suspense fallback={<Spinner />}>\n        <CategoryCardListWrapper>\n          <CategoryContainer>\n            {\n              props => (\n                <Fragment>\n                  <Row>\n                    {props.error && <Error message={props.error} />}\n                  </Row>\n                  <Row>\n                    {props.categories.map(Category => (\n                      <CategoryColWrapper key={Category.id} md={6}>\n                        <CategoryCard\n                          item={Category}\n                        />\n                      </CategoryColWrapper>\n                    ))\n                    }\n                  </Row>\n                </Fragment>\n              )\n            }\n          </CategoryContainer>\n        </CategoryCardListWrapper>\n\n      </Suspense>\n    </Row>\n  </Container>\n);\n","import React from 'react';\nimport CategoryList from './categoryList';\nimport { PageHeader } from '../Header';\nimport { CategoryPageWrapper } from './style';\n\nexport default (props) => (\n  <CategoryPageWrapper>\n    <PageHeader\n      title=\"Category\"\n      description=\"Category Page\"\n      keywords=\"Category, Glovo\" />\n    <CategoryList />\n  </CategoryPageWrapper>\n)\n","import styled from 'styled-components';\nimport { Card, Container } from 'react-bootstrap'\nimport { primaryColor, secondColor } from '../../constants/globalStyles';\n\nexport const StoreCardWrapper = styled(Card)`\n    border: 1.5px solid  ${props => props.open ? primaryColor : secondColor};\n    border-radius: 10px;\n    box-shadow: 0 2px 20px 0 rgba(0,0,0,.1);\n    text-decoration: none;\n    overflow: hidden;\n    margin-bottom: 40px;\n    transition: .3s;\n    text-align: center;\n    padding: 15px;\n    height: 250px;\n    position: relative;\n    &:hover {\n      transform: scale(1.04, 1.04) \n    }\n`;\n\nStoreCardWrapper.displayName = 'StoreCardWrapper';\n\nexport const StoreListWrapper = styled(Container)`\n    justify-content: center;\n    align-items:center;\n`;\n\nStoreListWrapper.displayName = 'StoreListWrapper';\n\n\nexport const StoreCardMessageWrapper = styled(Card.Text)`\n    font-weight: bold\n`;\n\nStoreCardMessageWrapper.displayName = 'StoreCardMessageWrapper';\n\n\nexport const StorePageWrapper = styled.div`\n    margin-top: 50px;\n`\nStorePageWrapper.displayName = 'StorePageWrapper';\n\n\nexport const StoreLabelWrapper = styled.span`\n    box-shadow: 0 2px 20px 0 rgba(0,0,0,.1);\n    border-radius: 100px;\n    font-size: 12px;\n    line-height: 15px;\n    padding: .50em 10px;\n    background-color: ${props => props.color};\n    color: #000000;\n    margin: 0 2px;\n    text-decoration: none!important;\n    &:hover {\n      text-decoration: none!important;\n      color: #000000;\n    }\n`\n\nStoreLabelWrapper.displayName = 'StoreLabelWrapper';\n\nexport const StoreCardTitleWrapper = styled.div`\n    text-align: center;\n    font-size: 26px;\n    font-weight: 600;\n    line-height: 24px!important;\n    margin: 0 auto 10px;\n`\n\nStoreCardTitleWrapper.displayName = 'StoreCardTitleWrapper';\n\n\nexport const StoreCardSubTitleWrapper = styled.div`\n    margin-top: 20px;\n    height: 30px;\n    line-height: 1.1em;\n    font-size: 16px;\n    color: #9b9b9b;\n    text-align: center;\n`\n\nStoreCardSubTitleWrapper.displayName = 'StoreCardSubTitleWrapper';\n\n\n\nexport const StoreHeaderWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 25px;\n`\n\nStoreHeaderWrapper.displayName = 'StoreHeaderWrapper';\n\n\nexport const StoreDetailWrapper = styled.div`\n    margin-top: 50px;\n`\n\nStoreDetailWrapper.displayName = 'StoreDetailWrapper';\n\n\nexport const StoreLabelListWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nStoreLabelListWrapper.displayName = 'StoreLabelListWrapper';\n","const min = 100;\nconst max = 255;\n\nconst random = () => {\n    return Math.floor(Math.random() * (+max - +min) + +min)\n}\n\nexport const getRandomColor = () => {\n    return \"rgb(\" + random()\n        + \",\" + random() + \",\"\n        + random() + \")\";\n}\n","import React from 'react';\nimport { StoreLabelWrapper } from './style';\nimport { getRandomColor } from '../../Helpers/colorHelper';\n\nexport const StoreLabel = ({ label }) => {\n    return (\n        <StoreLabelWrapper\n            color={getRandomColor()}>\n            {label}\n        </StoreLabelWrapper>\n    );\n}","import React, { PureComponent } from 'react';\nimport { StoreCardWrapper, StoreCardMessageWrapper, StoreLabelListWrapper, StoreCardTitleWrapper, StoreCardSubTitleWrapper, StoreDetailWrapper } from './style';\nimport { StoreLabel } from './storeLabel';\n\n\nclass StoreCard extends PureComponent {\n\n    render() {\n        return <StoreCardWrapper open={this.props.item.open}>\n            <div>\n                <StoreCardTitleWrapper>\n                    {this.props.item.name}\n                </StoreCardTitleWrapper>\n                <StoreCardSubTitleWrapper>\n                    {this.props.item.description}\n                </StoreCardSubTitleWrapper>\n                <StoreDetailWrapper>\n                    <StoreCardMessageWrapper>\n                        {this.props.item.message}\n                    </StoreCardMessageWrapper>\n                    <StoreLabelListWrapper>\n                        {this.props.item.tags.map(tag =>\n                            <StoreLabel\n                                key={`${tag}Key`}\n                                label={tag} />)}\n                    </StoreLabelListWrapper>\n                </StoreDetailWrapper>\n            </div>\n        </StoreCardWrapper>\n    }\n}\n\n\nexport default StoreCard;","\n\n\nimport styled from 'styled-components';\nimport { secondColor } from '../../constants/globalStyles';\n\nexport const FilterInputWrapper = styled.input`\n    border-color: ${secondColor} !important;\n    color: #000;\n    text-align: left;\n    font-size: 20px;\n    height: 30px;\n    padding-bottom: 15px;\n    padding-left: 50px;\n    width: 100%;\n    margin-bottom: 20px;\n    background: transparent;\n    border:none;\n    border-bottom: 2px solid #C8CCD4\n    border-radius: 0;\n    border-color: ${secondColor}!important;\n    font-weight: 700;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-left: 10px;\n    padding-top: 10px;\n`;\n\nFilterInputWrapper.displayName ='FilterInputWrapper';\n\nexport const FilterWrapper = styled.div`\n    position: relative;\n    font-size: 14px;\n    display: inline-block;\n    width: 100%;\n    display:flex;\n    flex-direction: row;\n`;\n\nFilterWrapper.displayName ='FilterWrapper';\n\n\nexport const FilterInputSpanWrapper = styled.span`\n`;\n\nFilterInputSpanWrapper.displayName ='FilterInputSpanWrapper';\n","export const FILTER_ICON_URL = 'https://img.icons8.com/ios/26/000000/search-filled.png'","import React from 'react';\nimport { FilterWrapper, FilterInputWrapper, FilterInputSpanWrapper } from \"./style\";\nimport { FILTER_ICON_URL } from '../../constants/urls';\n\nexport const Filter = ({ onChange, placeholder, type }) => (\n    <FilterWrapper>\n        <FilterInputSpanWrapper>\n            <img src={FILTER_ICON_URL} alt={`Filter ${type}`} />\n        </FilterInputSpanWrapper>\n        <FilterInputWrapper\n            type=\"text\"\n            onChange={(e) => onChange(e.target.value, type)}\n            placeholder={placeholder} >\n        </FilterInputWrapper>\n    </FilterWrapper>\n\n)","import React, { Suspense } from 'react';\nimport StoreCard from './storeCard';\nimport Spinner from '../Spinner';\nimport { Filter } from '../Filter';\nimport { Error } from '../Error';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst StoreContainer = React.lazy(() => import('../../containers/storeContainer'))\n\nexport const StoreList = ({ type }) => (\n  <Suspense fallback={<Spinner />}>\n    <StoreContainer\n      type={type} >\n      {\n        props => (\n          <Container>\n            <Filter\n              type={type}\n              placeholder={`Search in the ${type} with tags`}\n              onChange={props.filterHandleChange} />\n            <Row>\n              {props.error && <Error message={props.error} />}\n            </Row>\n            <Row>\n              {props.stores.map(store => (\n                <Col\n                  md={6}\n                  lg={4}\n                  key={store.id} >\n                  <StoreCard\n                    item={store} />\n                </Col>\n              ))}\n            </Row>\n          </Container>\n        )\n      }\n    </StoreContainer>\n  </Suspense>\n\n);\n","\n\n\nimport styled from 'styled-components';\nimport { primaryColor, secondColor } from '../../constants/globalStyles';\n\nexport const ButtonWrapper = styled.button`\n    width: ${props => props.width}px;\n    padding: 10px 0;\n    color: ${primaryColor};\n    background: ${primaryColor};\n    color: white;\n    border-color: white;\n    width: 100px;\n    margin: 10px 0;\n    display: inline-block;\n    font-weight: 400;\n    text-align: center;\n    vertical-align: middle;\n    user-select: none;\n    border: 1px solid transparent;\n    padding: .375rem .75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    border-radius: .25rem;\n    transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n    &:hover {\n      background: ${secondColor};\n      border-color: ${secondColor};\n    }\n   \n`;","import React from 'react';\nimport { ButtonWrapper } from './style';\n\nexport const Button = (props) => (\n    <ButtonWrapper\n        type=\"submit\"\n        {...props}>\n        {props.title}\n    </ButtonWrapper>\n)\n\n\n\n\n\n","import React from 'react';\nimport { Button } from '../Button';\nimport { Link } from 'react-router-dom';\nimport { PageHeader } from '../Header';\nimport { StoreHeaderWrapper } from './style';\n\n\nexport const StoreHeader = ({ type }) => (\n    <StoreHeaderWrapper>\n        <PageHeader\n            title={`${type}`}\n            header={`${type}`}\n            description={`${type} Store Page`}\n            keywords={`${type}, Store, Glovo`} />\n        <Link to=\"/category\">\n            <Button\n                title=\"Back\" />\n        </Link>\n    </StoreHeaderWrapper>\n\n);\n","import React from 'react';\nimport { StoreList } from './storeList';\nimport { StorePageWrapper } from './style';\nimport { StoreHeader } from './storeHeader';\n\nexport default (props) => {\n  var { type } = props.match.params;\n  return <StorePageWrapper>\n    <StoreHeader\n      type={type} />\n    <StoreList type={type} />\n  </StorePageWrapper>\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport CategoryPage from '../Category';\nimport StorePage from '../Store';\n\n\nexport function Main() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={CategoryPage} />\n        <Route exact path=\"/category\" component={CategoryPage} />\n        <Route path=\"/category/:type\" component={StorePage} />\n      </Switch>\n    );\n  }","import React from 'react';\nimport { GlobalStyles } from '../../constants/globalStyles';\nimport { Container } from 'react-bootstrap';\nimport { Header } from '../Header';\nimport { Main } from './main';\n\n\nexport const App = () => (\n  <Container>\n    <GlobalStyles />\n    <Header title=\"Glovo\" />\n    <Main />\n  </Container>\n)","import * as actionTypes from '../constants/actionTypes';\n\nconst initialState = {\n    items: [],\n    error: null\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case actionTypes.FETCH_CATEGORIES_SUCCESS:\n            return {\n                ...state,\n                error: null,\n                items: action.payload\n            };\n        case actionTypes.FETCH_CATEGORIES_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import * as actionTypes from '../constants/actionTypes';\n\nconst initialState = {\n    items: [],\n    error: null\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case actionTypes.FETCH_STORE_SUCCESS:\n            return {\n                ...state,\n                items: action.payload,\n                error: null\n            };\n        case actionTypes.FILTER_STORE_SUCCESS:\n            return {\n                ...state,\n                error: null,\n                items: action.payload,\n            };\n        case actionTypes.FILTER_STORE_ERROR:\n        case actionTypes.FETCH_STORE_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                items: [],\n            };\n        default:\n            return state;\n\n    }\n}","import { combineReducers } from 'redux';\nimport category from './category-reducer';\nimport store from './store-reducer';\n// import error from './error-reducer';\n\nconst rootReducer = combineReducers({\n  category,\n  store\n//   error\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport ReduxThunkMiddleware from 'redux-thunk';\nimport ReduxPromiseMiddleware from 'redux-promise';\nimport logger from 'redux-logger'\nimport reducer from '../reducers';\n\nconst middleware = [ReduxThunkMiddleware, ReduxPromiseMiddleware, logger];\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middleware),\n);\n\n\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    \n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {App} from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}